Игра происходит на определённом поле (матрице), которое содержит в себе информацию о текущем положении фигур
На этом поле постоянно происходят определённые события: падение новой фигурки, сбор фигур в последовательность, перемещение фигур после сбора других в последовательность
Соответственно, матрицу можно представить как отдельный модуль, который получает пользовательские действия на вход и инициирует события

Второй модуль можно представить как View в MVP. 
Этот модуль обрабатывает пользовательский ввод, затем отрисовывает каждый ход в консоли.
Изменения матрицы можно получать из событий, затем по очереди их отрисовывать. 

Третий модуль ведёт учёт статистики. 
Он также получает уведомления от матрицы и сохраняет в себе текущий счёт. 
После окончания игры сохраняет всё в бд, откуда дальше модуль интерфейса достаёт данные и показывает игроку.

Бонусы следует вынести в отдельный модуль, потому что с ним взаимодействуют не только другие модули, но и пользователь.
В принципе, это просто модуль для ввода чит-кодов в матрицу. 
Первый модуль полностью занимается изменением матрицы: бонусы только получают уведомление о выполнении необходимых условий и об их вызове.
Для соблюдения SRP можно вынести учёт количества бонусов в модуль статистики.

Пятым модулем можно вынести генератор рандомных элементов на вход матрицы. 
Первый модуль каждую итерацию делает запрос к этому модулю и получает нужный элемент.
Вынос этого модуля отдельно позволяет сделать рандом более интересным, избежать повторок, за счёт хранения в памяти ±5 последних фигур
Также можно выводить следующую фигуру в отдельном окне благодаря такому функционалу.