Предположим, в системе, спроектированной в Event-Driven архитектуре, у нас есть следующая система классов-событий:
BaseEvent (Содержит в себе только интерфейс события)
|
PurchasedEvent (Постусловие - данные отправлены обработчикам)
|
PurchasedWithLoanEvent (Предусловие для Accept осталось тем же: его нет)

Если ослабить постусловие (с и так слабого), то у нас не будет гарантии, что данные дойдут до обработчиков, или они вообще получат уведомление
Если усилить предусловие, то в случае, если будет необходимо полиморфно вызвать ивент в модуле покупки, то придётся строить условную логику
Так мы сломаем доступ к базовой логике. Подобные ограничения в данном случае лучше реализовывать на уровне актора ивента, который его вызвал